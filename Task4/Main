package com.sl;

import java.util.LinkedList;
import util.List2BinaryTree;

/**
 * To implement BinaryTree using java.util.LinkedList class
 *
 * @author Amna Ghori
 */
public class Main {

    public static void main(String args[]) {
        List2BinaryTree bt = new List2BinaryTree();

        // Creating a linked list with values 
        LinkedList<Integer> list = new LinkedList<>();
        list.add(41);
        list.add(2);
        list.add(1);
        list.add(4);
        list.add(5);
        list.add(6);
        list.add(10);
        list.add(6);

        // Calling a method to convert the given linked list into binary tree
        bt.setRoot(bt.insertList2BT(list, bt.getRoot(), 0));
        
        // Printing Binary Tree
        bt.printTree(bt.getRoot());
        
        // Printing the binary tree by using 3 different traversal methods 
        System.out.print("In-Order Traversal: ");
        bt.inOrderTraversal(bt.getRoot());
        System.out.print("\nPre-Order Traversal: ");
        bt.preOrderTraversal(bt.getRoot());
        System.out.print("\nPost-Order Traversal: ");
        bt.postOrderTraversal(bt.getRoot());
    }
}
